#include<iostream>;//bfs 没有用到子函数和递归 就是每到一个地方 把四个角都试着走一下，如果可以就继承不可以就算了。
using namespace std;
struct node
{
	int x;
	int y;
	int f;
	int s;
};

int main()
{
	struct node que[2501];
	int a[51][51] = {}, book[51][51] = {};
	int x[5] = { 0,0,1,0,-1 };
	int y[5] = { 0,1,0,-1,0 };

	int head, tail;
	int i, j, k, n, m, s1, s2, e1, e2, tx, ty, flag;

	cin >> n >> m;
	for (i = 1; i <= n; i++)
		for (j = 1; j <= m; j++)
			cin >> a[i][j];
	cin >> s1 >> s2 >> e1 >> e2;

	head = 1;
	tail = 1;

	que[tail].x = s1;
	que[tail].y = s2;
	que[tail].f = 0;
	que[tail].s = 0;
	tail++;
	book[s1][s2] = 1;

	flag = 0;


	while (head < tail)
	{

		for (i = 1; i <= 4; i++)
		{
			tx = que[head].x + x[i];
			ty = que[head].y + y[i];

			if (tx<1 || ty<1 || tx>n || ty>m)
				continue;

			if (a[tx][ty] == 0 && book[tx][ty] == 0)
			{

				book[tx][ty] = 1;
				que[tail].x = tx;
				que[tail].y = ty;
				que[tail].s = que[head].s + 1;
				tail++;
			}

			if (tx == e1 && ty == e2)
			{
				flag = 1;
				break;
			}
		}
		if (flag == 1)
			break;
		head++;
	}
	cout << que[tail-1].s;


	return 0;
}

